% Romain Jacob
% April 19, 2016
%
% That script reinitilizes the variables and data structure modified during
% simulation, but keeps the current time vector.
%
% For debug purposes.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

flowReleaseCount = zeros(1,size(flows,1));

clear nodeData

nodeData = [];

boltQueueStruct = struct(...
    'queue'     , zeros(1, S_BOLT_pack), ...
    'next_in'   , 1, ...
    'next_out'  , 1, ...
    'IND'       , false, ...
    'current_buffer', 0, ...
    'max_buffer', 0 ...
    );    
CPMemoryStruct = struct(...
    'queue_in'      , zeros(1, packet_per_round), ...
    'next_in'       , 1, ...
    'next_out'      , 1, ...
    'IND'           , false, ...
    'counter_out'   , 0, ...
    'current_buffer', 0, ...
    'max_buffer', 0 ...
    );    

%Define the data structure for one node
nodeDataStruct = struct(...
    'sourceStream'  , [] ,...
    'destStream'    , [] ,...
    'T_flush_send', param.C_CP_full ,...
    'T_flush_receive'       , inf ,...
    'T_flush_receive_min'   , 0.01 ,...
    'util_BOLT_IN'  , 0 ,...
    'util_BOLT_OUT' , 0 ,...
    'util_CP'       , 0 ,...
    'util_LWB'      , 0, ...   
    'CPFlushCount'  , 0, ...
    'CPReadCount'   , 0, ...
    'CPWriteCount'   , 0, ...
    'APFlushCount'  , 0, ...    
    'APReadCount'   , 0, ...   
    'AP_flush_in_progress'   , false, ... 
    'CP_flush_in_progress'   , false, ...   
    'BOLT_IN'       , boltQueueStruct, ...   
    'BOLT_OUT'      , boltQueueStruct, ...   
    'CP_MEM'        , CPMemoryStruct );

for node = 1:N
    nodeData = [nodeData nodeDataStruct];    
end

flowSetDefinition

for flowID = 1:size(flows,1)
    flowTime{flowID}(3:end,1:end) = 0;
end

% %% Definition of the node state and data
% nodeTime = [];
%   
% for nodeID = 1:N
%     % Define the operation time for read and flush
%     nodeTimeStruct = generateNodeTime(nodeID, schedule, nodeData, param);
%     nodeTime = [nodeTime nodeTimeStruct];
% end
% 
% %% Define the overall event time vector
% 
% overall_vector_event = schedule(2,:);
% 
% for flowID=1:size(flows,1)
%     overall_vector_event = [overall_vector_event ...
%                             flowTime{flowID}(2,:)];
% end
% 
% for nodeID = 1:N
%     overall_vector_event = [overall_vector_event ...
%                             nodeTime(nodeID).CPFlushTime ...
%                             nodeTime(nodeID).CPReadTime ...
%                             nodeTime(nodeID).CPWriteTime ...
%                             nodeTime(nodeID).APFlushTime ...
%                             nodeTime(nodeID).APReadTime ...
%                             ];
% end
% 
% overall_vector_event = unique(overall_vector_event);